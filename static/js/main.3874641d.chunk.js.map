{"version":3,"sources":["components/button/Button.tsx","components/note/index.tsx","components/icon/index.tsx","components/button/AddButton.tsx","components/with-local-storage/WithLocalStorage.tsx","utils/index.ts","containers/note-controller/index.tsx","containers/workspace/index.tsx","App.tsx","index.tsx"],"names":["ButtonSize","DEFAULT_NOTE","noteId","text","top","left","order","Note","React","forwardRef","props","ref","zIndex","onTextChange","onMouseDown","onMouseUp","className","style","value","onChange","mainCss","Button","onClick","icon","size","M","AddIcon","width","height","viewBox","fill","xmlns","x","y","transform","DeleteIcon","d","AddButton","WithLocalStorage","WrappedComponent","replaceItem","storageItem","localStorage","getItem","item","JSON","parse","newItem","setItem","stringify","updateItemsProp","notes","propName","Object","keys","forEach","note","saveItem","itemId","deleteItem","removeItem","this","storageReplaceItem","storageSaveItem","storageDeleteItem","storageUpdateItemsProp","Component","generateId","S4","Math","random","toString","substring","noteRef","event","noteEl","current","noteRect","getBoundingClientRect","setState","mouseNoteOffset","pageX","pageY","document","addEventListener","onMouseMove","state","mouseNoteOffsetX","mouseNoteOffsetY","position","removeEventListener","moveNoteToFront","deleteNoteIfNeeded","currentTarget","deleteNote","trashEl","getElementsByClassName","boundingClientRectA","boundingClientRectB","rectA","rectB","isIntersects","changeNotesOrder","notesKeys","noteIndex","noteKey","index","length","useState","setNotes","createNote","useCallback","notesLength","newNote","notesClone","noteForMove","newNotes","notesItems","useMemo","map","key","useEffect","reduce","acc","notesByOrder","sort","a","b","clear","L","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3874641d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Button.css';\r\n\r\nexport enum ButtonSize {\r\n  XS = 'XS',\r\n  S = 'S',\r\n  M = 'M',\r\n  L = 'L',\r\n}\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  size?: ButtonSize;\r\n  onClick?: () => void;\r\n  icon?: JSX.Element;\r\n}\r\n\r\nconst mainCss = 'button'\r\n\r\nconst Button: React.FC<IProps> = ({ onClick, icon, className = '', size = ButtonSize.M }) => {\r\n  return (\r\n    <div className={`${mainCss} ${className} ${mainCss}_size-${size}`} onClick={onClick}>\r\n      {icon}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport interface INote {\r\n  noteId: string;\r\n  text: string;\r\n  left: number;\r\n  top: number;\r\n  order: number;\r\n}\r\n\r\ntype IProps = Omit<INote, 'noteId' | 'order'> & {\r\n  zIndex: number;\r\n  ref?: React.Ref<HTMLDivElement>;\r\n  onMouseDown(event: React.MouseEvent<HTMLDivElement>): void;\r\n  onMouseUp(): void;\r\n  onTextChange(event: React.ChangeEvent<HTMLTextAreaElement>): void;\r\n};\r\n\r\nexport const DEFAULT_NOTE: INote = {\r\n  noteId: '',\r\n  text: '',\r\n  top: 120,\r\n  left: 30,\r\n  order: 0,\r\n};\r\n\r\nconst Note: React.FC<IProps> = React.forwardRef<HTMLDivElement, IProps>(\r\n  (props, ref): JSX.Element => {\r\n    const {\r\n      text,\r\n      left,\r\n      top,\r\n      zIndex,\r\n      onTextChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n    } = props;\r\n\r\n    return (\r\n      <div ref={ref} className=\"note\" style={{ left, top, zIndex }} onMouseDown={onMouseDown} onMouseUp={onMouseUp}>\r\n        <textarea value={text} onChange={onTextChange} />\r\n      </div>\r\n    )\r\n  }\r\n);\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nexport const AddIcon = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <rect x=\"5\" y=\"11\" width=\"14\" height=\"2\" fill=\"currentColor\" />\r\n    <rect x=\"13\" y=\"5\" width=\"14\" height=\"2\" transform=\"rotate(90 13 5)\" fill=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\nexport const DeleteIcon = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\" fill=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport './styles/AddButton.css'\r\nimport { AddIcon } from '../icon';\r\n\r\ninterface IProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst AddButton: React.FC<IProps> = ({ onClick }) => {\r\n  return (\r\n    <div className=\"button__add\">\r\n      <Button onClick={onClick} icon={<AddIcon />}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddButton;\r\n","import React from 'react';\r\nimport { INote } from '../note';\r\n\r\nconst WithLocalStorage = <P extends object>(WrappedComponent: React.ComponentType<P>) => {\r\n  return class extends React.Component<P> {\r\n\r\n    private replaceItem = (noteId: string, value: Record<string, any>): void => {\r\n      const storageItem = localStorage.getItem(noteId) ?? '';\r\n      const item = JSON.parse(storageItem);\r\n      const newItem = {\r\n        ...item,\r\n        ...value,\r\n      }\r\n      localStorage.setItem(noteId, JSON.stringify(newItem));\r\n    }\r\n\r\n    private updateItemsProp = (notes: Record<string, INote>, propName: string): void => {\r\n      Object.keys(notes).forEach((noteId) => {\r\n        const note = notes[noteId];\r\n        // @ts-ignore\r\n        this.replaceItem(noteId, { [propName]: note[propName] });\r\n      });\r\n    }\r\n\r\n    private saveItem = (itemId: string, item: any): void => {\r\n      localStorage.setItem(itemId, JSON.stringify(item));\r\n    }\r\n\r\n    private deleteItem = (itemId: string): void => {\r\n      localStorage.removeItem(itemId);\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n      return (\r\n        <WrappedComponent\r\n          {...(this.props as P)}\r\n          storageReplaceItem={this.replaceItem}\r\n          storageSaveItem={this.saveItem}\r\n          storageDeleteItem={this.deleteItem}\r\n          storageUpdateItemsProp={this.updateItemsProp} />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default WithLocalStorage;\r\n","export const generateId = (): string => {\r\n  const S4 = function () {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  };\r\n  return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n}\r\n\r\nexport const isIntersects = function (boundingClientRectA: DOMRect, boundingClientRectB: DOMRect): boolean {\r\n  const rectA = {\r\n    x: boundingClientRectA.left,\r\n    x1: boundingClientRectA.left + boundingClientRectA.width,\r\n    y: boundingClientRectA.top,\r\n    y1: boundingClientRectA.top + boundingClientRectA.height,\r\n  }\r\n  const rectB = {\r\n    x: boundingClientRectB.left,\r\n    x1: boundingClientRectB.left + boundingClientRectB.width,\r\n    y: boundingClientRectB.top,\r\n    y1: boundingClientRectB.top + boundingClientRectB.height,\r\n  }\r\n  return !(\r\n    rectA.x > rectB.x1 ||\r\n    rectA.x1 < rectB.x ||\r\n    rectA.y > rectB.y1 ||\r\n    rectA.y1 < rectB.y\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Note, { INote } from '../../components/note';\r\nimport WithLocalStorage from '../../components/with-local-storage/WithLocalStorage';\r\nimport { isIntersects } from '../../utils';\r\n\r\ntype NotePosition = Pick<INote, 'left' | 'top'>;\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface INoteControllerProps {\r\n  note: INote;\r\n  noteId: string;\r\n  moveNoteToFront(noteId: string): void;\r\n  deleteNote(noteId: string): void;\r\n  storageReplaceItem?: (noteId: string, value: Record<string, any>) => void;\r\n}\r\n\r\ninterface IState {\r\n  zIndex: number;\r\n  text: string;\r\n  position: NotePosition;\r\n  mouseNoteOffset: Position;\r\n}\r\n\r\nclass NoteController extends React.Component<INoteControllerProps, IState> {\r\n  readonly noteRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: INoteControllerProps) {\r\n    super(props);\r\n\r\n    const { note } = props;\r\n    const { left, top } = note;\r\n    this.state = {\r\n      zIndex: 1,\r\n      text: note.text,\r\n      position: {\r\n        left,\r\n        top,\r\n      },\r\n      mouseNoteOffset: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n    };\r\n    this.noteRef = React.createRef();\r\n  }\r\n\r\n  private onMouseDown = (event: React.MouseEvent<HTMLDivElement>): void => {\r\n    const noteEl = this.noteRef.current;\r\n    if (!noteEl) return;\r\n\r\n    const noteRect = noteEl.getBoundingClientRect();\r\n    this.setState({\r\n      mouseNoteOffset: {\r\n        x: event.pageX - noteRect.left,\r\n        y: event.pageY - noteRect.top,\r\n      },\r\n      zIndex: 999,\r\n    });\r\n    document.addEventListener('mousemove', this.onMouseMove);\r\n  };\r\n\r\n  private onMouseMove = (event: MouseEvent): void => {\r\n    const { mouseNoteOffset } = this.state;\r\n\r\n    const { x: mouseNoteOffsetX, y: mouseNoteOffsetY } = mouseNoteOffset;\r\n    const left = event.pageX - mouseNoteOffsetX;\r\n    const top = event.pageY - mouseNoteOffsetY;\r\n    this.setState({\r\n      position: { left, top }\r\n    });\r\n  };\r\n\r\n  private onMouseUp = (): void => {\r\n    document.removeEventListener('mousemove', this.onMouseMove);\r\n\r\n    const { storageReplaceItem, moveNoteToFront, noteId } = this.props;\r\n    const isNoteDeleted = this.deleteNoteIfNeeded();\r\n    if (isNoteDeleted) return;\r\n\r\n    const { position } = this.state;\r\n    moveNoteToFront(noteId);\r\n    storageReplaceItem && storageReplaceItem(noteId, position);\r\n    this.setState({\r\n      zIndex: 1,\r\n    })\r\n  };\r\n\r\n  private onTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { storageReplaceItem, noteId,  } = this.props;\r\n    const value = event.currentTarget.value;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n    storageReplaceItem && storageReplaceItem(noteId, { text: value });\r\n  };\r\n\r\n  private deleteNoteIfNeeded = (): boolean => {\r\n    const { noteId, deleteNote } = this.props;\r\n    const noteEl = this.noteRef.current;\r\n    const trashEl = document.getElementsByClassName('trash')[0];\r\n    if (!noteEl || !trashEl) return false;\r\n\r\n    const note = noteEl.getBoundingClientRect();\r\n    const trash = trashEl.getBoundingClientRect();\r\n    const isNoteNeedDeleted = isIntersects(note, trash);\r\n    if (isNoteNeedDeleted) {\r\n      deleteNote(noteId);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    const { position, zIndex, text } = this.state;\r\n\r\n    return (\r\n      <Note\r\n        text={text}\r\n        left={position.left}\r\n        top={position.top}\r\n        ref={this.noteRef}\r\n        zIndex={zIndex}\r\n        onTextChange={this.onTextChange}\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseUp={this.onMouseUp} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default WithLocalStorage(NoteController);\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { DEFAULT_NOTE, INote } from '../../components/note';\r\nimport AddButton from '../../components/button/AddButton';\r\nimport NoteController from '../../containers/note-controller';\r\nimport { generateId } from '../../utils';\r\nimport WithLocalStorage from '../../components/with-local-storage/WithLocalStorage';\r\nimport { DeleteIcon } from '../../components/icon';\r\nimport Button, { ButtonSize } from '../../components/button/Button';\r\nimport './styles.css';\r\n\r\ninterface IProps {\r\n  storageUpdateItemsProp?: (notes: Record<string, INote>, propName: string) => void;\r\n  storageSaveItem?: (itemId: string, item: any) => void;\r\n  storageDeleteItem?: (itemId: string) => void;\r\n}\r\n\r\nconst NEW_NOTE_OFFSET = 20;\r\n\r\nconst createNewNote = (notesLength: number): INote => ({\r\n  ...DEFAULT_NOTE,\r\n  top: DEFAULT_NOTE.top + (NEW_NOTE_OFFSET * notesLength),\r\n  left: DEFAULT_NOTE.left + (NEW_NOTE_OFFSET * notesLength),\r\n  noteId: generateId(),\r\n  order: notesLength,\r\n});\r\n\r\n// change notes order property, because we remove current note to the end\r\nconst changeNotesOrder = (noteId: string, notes: Record<string, INote>): void => {\r\n  const notesKeys = Object.keys(notes);\r\n  let noteIndex = 0;\r\n  notesKeys.forEach((noteKey, index) => {\r\n    if (noteKey === noteId) {\r\n      noteIndex = index;\r\n      notes[noteKey].order = notesKeys.length - 1;\r\n    }\r\n    if (index > noteIndex) {\r\n      notes[noteKey].order = index - 1;\r\n    }\r\n  });\r\n}\r\n\r\nconst Workspace: React.FC<IProps> = ({ storageUpdateItemsProp, storageSaveItem, storageDeleteItem }) => {\r\n  const [notes, setNotes] = useState<Record<string, INote>>({});\r\n\r\n  const createNote = useCallback(() => {\r\n    const notesKeys = Object.keys(notes);\r\n    const newNote = createNewNote(notesKeys.length);\r\n    setNotes({\r\n      ...notes,\r\n      [newNote.noteId]: newNote,\r\n    });\r\n\r\n    storageSaveItem && storageSaveItem(newNote.noteId, newNote);\r\n  }, [notes, storageSaveItem]);\r\n\r\n  const moveNoteToFront = useCallback((noteId: string) => {\r\n    const notesClone = {...notes};\r\n\r\n    changeNotesOrder(noteId, notesClone);\r\n\r\n    const noteForMove = {...notesClone[noteId]};\r\n    delete notesClone[noteId];\r\n\r\n    const newNotes = {\r\n      ...notesClone,\r\n      [noteId]: noteForMove,\r\n    }\r\n    setNotes(newNotes);\r\n\r\n    storageUpdateItemsProp && storageUpdateItemsProp(newNotes, 'order');\r\n  }, [notes, storageUpdateItemsProp]);\r\n\r\n  const deleteNote = useCallback((noteId: string) => {\r\n    const notesClone = {...notes};\r\n\r\n    changeNotesOrder(noteId, notesClone);\r\n\r\n    delete notesClone[noteId];\r\n    const newNotes = {\r\n      ...notesClone,\r\n    }\r\n    setNotes(newNotes);\r\n\r\n    storageDeleteItem && storageDeleteItem(noteId);\r\n  }, [notes, storageDeleteItem]);\r\n\r\n  const notesItems = useMemo(\r\n    () =>\r\n      Object.keys(notes).map((key) => (\r\n        <NoteController\r\n          key={key}\r\n          note={notes[key]}\r\n          noteId={key}\r\n          moveNoteToFront={moveNoteToFront}\r\n          deleteNote={deleteNote} />\r\n      )), [\r\n      notes, moveNoteToFront, deleteNote,\r\n    ]);\r\n\r\n  useEffect(() => {\r\n    const notes: Record<string, INote> = Object.keys(localStorage).reduce(\r\n      (acc, key) => ({...acc, [key]: JSON.parse(localStorage[key])}),\r\n      {},\r\n    );\r\n    const notesByOrder = Object.keys(notes)\r\n      .sort((a, b) => notes[a].order - notes[b].order)\r\n      .reduce((acc, key) => ({ ...acc, [key]: notes[key] }), {});\r\n\r\n    setNotes(notesByOrder);\r\n\r\n    return () => {\r\n      localStorage.clear();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"workspace\">\r\n      <header className=\"header\">Sticky Notes</header>\r\n      <AddButton onClick={createNote}/>\r\n      {notesItems}\r\n      <div className=\"trash\">\r\n        <Button className=\"delete-button\" icon={<DeleteIcon />} size={ButtonSize.L}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WithLocalStorage(Workspace);\r\n","import React from 'react';\nimport './App.css';\nimport Workspace from './containers/workspace';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Workspace />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
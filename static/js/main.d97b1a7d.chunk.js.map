{"version":3,"sources":["components/button/Button.tsx","components/note/index.tsx","components/icon/index.tsx","components/button/AddButton.tsx","utils/index.ts","components/with-local-storage/WithLocalStorage.tsx","containers/controllers/note-controller/index.tsx","containers/controllers/BaseController.tsx","containers/workspace/index.tsx","App.tsx","index.tsx"],"names":["ButtonSize","DEFAULT_NOTE","noteId","text","top","left","order","width","height","minWidth","minHeight","Note","React","props","ref","zIndex","onTextChange","onMouseDown","onDblClick","isEditMode","className","style","value","readOnly","onChange","onDoubleClick","mainCss","Button","onClick","icon","size","M","AddIcon","viewBox","fill","xmlns","x","y","transform","DeleteIcon","d","AddButton","generateId","S4","Math","random","toString","substring","WithLocalStorage","WrappedComponent","replaceItem","storageItem","localStorage","getItem","item","JSON","parse","newItem","setItem","stringify","updateItemsProp","notes","propName","Object","keys","forEach","note","saveItem","itemId","deleteItem","removeItem","getAllNotes","reduce","acc","key","clearAll","clear","this","storageReplaceItem","storageSaveItem","storageDeleteItem","storageUpdateItemsProp","storageGetAll","storageClearAll","Component","noteRef","resizeRef","event","setSelectedNoteId","noteEl","current","noteRect","getBoundingClientRect","setState","mouseNoteOffset","pageX","pageY","isResizeShown","document","addEventListener","onMouseMove","onMouseUp","state","mouseNoteOffsetX","mouseNoteOffsetY","window","innerHeight","position","preventDefault","removeEventListener","moveNoteToFront","deleteNoteIfNeeded","currentTarget","deleteNote","trashEl","getElementsByClassName","boundingClientRectA","boundingClientRectB","rectA","rectB","isIntersects","onResizeMouseDown","onResizeMouseMove","onResizeMouseUp","initialWidth","initialHeight","observer","undefined","isSelected","opacity","BaseController","items","useState","selectedNoteId","onClickOutsideNote","useCallback","target","targetClass","includes","useEffect","map","changeNotesOrder","notesKeys","noteIndex","noteKey","index","length","Workspace","setNotes","createNote","notesLength","newNote","notesClone","noteForMove","newNotes","notesByOrder","sort","a","b","L","defaultProps","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d97b1a7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Button.css';\r\n\r\nexport enum ButtonSize {\r\n  XS = 'XS',\r\n  S = 'S',\r\n  M = 'M',\r\n  L = 'L',\r\n}\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  size?: ButtonSize;\r\n  onClick?: () => void;\r\n  icon?: JSX.Element;\r\n}\r\n\r\nconst mainCss = 'button';\r\n\r\nconst Button: React.FC<IProps> = ({ onClick, icon, className = '', size = ButtonSize.M }) => {\r\n  return (\r\n    <div className={`${mainCss} ${className} ${mainCss}_size-${size}`} onClick={onClick}>\r\n      {icon}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import * as React from 'react';\r\nimport './styles.css';\r\n\r\nexport interface INote {\r\n  noteId: string;\r\n  text: string;\r\n  left: number;\r\n  top: number;\r\n  order: number;\r\n  width: number;\r\n  height: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n}\r\n\r\ntype IProps = Omit<INote, 'noteId' | 'order'> & {\r\n  zIndex: number;\r\n  isEditMode: boolean;\r\n  ref?: React.Ref<HTMLTextAreaElement>;\r\n  onMouseDown(event: React.MouseEvent<HTMLTextAreaElement>): void;\r\n  onTextChange(event: React.ChangeEvent<HTMLTextAreaElement>): void;\r\n  onDblClick(): void;\r\n};\r\n\r\nexport const DEFAULT_NOTE: INote = {\r\n  noteId: '',\r\n  text: '',\r\n  top: 120,\r\n  left: 30,\r\n  order: 0,\r\n  width: 200,\r\n  height: 200,\r\n  minWidth: 50,\r\n  minHeight: 50,\r\n};\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst Note: React.FC<IProps> = React.forwardRef<HTMLTextAreaElement, IProps>(\r\n  (props, ref): JSX.Element => {\r\n    const {\r\n      text,\r\n      left,\r\n      top,\r\n      zIndex,\r\n      onTextChange,\r\n      onMouseDown,\r\n      width,\r\n      height,\r\n      onDblClick,\r\n      isEditMode,\r\n    } = props;\r\n\r\n    return (\r\n      <textarea\r\n        ref={ref}\r\n        className=\"note\"\r\n        style={{ left, top, zIndex, width, height }}\r\n        value={text}\r\n        readOnly={!isEditMode}\r\n        onMouseDown={onMouseDown}\r\n        onChange={onTextChange}\r\n        onDoubleClick={onDblClick}\r\n      />\r\n    );\r\n  },\r\n);\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nexport const AddIcon = (): JSX.Element => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <rect x=\"5\" y=\"11\" width=\"14\" height=\"2\" fill=\"currentColor\" />\r\n    <rect x=\"13\" y=\"5\" width=\"14\" height=\"2\" transform=\"rotate(90 13 5)\" fill=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\nexport const DeleteIcon = (): JSX.Element => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport './styles/AddButton.css';\r\nimport { AddIcon } from '../icon';\r\n\r\ninterface IProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst AddButton: React.FC<IProps> = ({ onClick }) => {\r\n  return (\r\n    <div className=\"button__add\">\r\n      <Button onClick={onClick} icon={<AddIcon />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","export const generateId = (): string => {\r\n  // eslint-disable-next-line no-bitwise\r\n  const S4 = (): string => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n\r\n  return `${S4() + S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`;\r\n};\r\n\r\nexport const isIntersects = (\r\n  boundingClientRectA: DOMRect,\r\n  boundingClientRectB: DOMRect,\r\n): boolean => {\r\n  const rectA = {\r\n    x: boundingClientRectA.left,\r\n    x1: boundingClientRectA.left + boundingClientRectA.width,\r\n    y: boundingClientRectA.top,\r\n    y1: boundingClientRectA.top + boundingClientRectA.height,\r\n  };\r\n  const rectB = {\r\n    x: boundingClientRectB.left,\r\n    x1: boundingClientRectB.left + boundingClientRectB.width,\r\n    y: boundingClientRectB.top,\r\n    y1: boundingClientRectB.top + boundingClientRectB.height,\r\n  };\r\n  return !(rectA.x > rectB.x1 || rectA.x1 < rectB.x || rectA.y > rectB.y1 || rectA.y1 < rectB.y);\r\n};\r\n","import React from 'react';\r\nimport { INote } from '../note';\r\n\r\nexport interface StorageProps {\r\n  storageUpdateItemsProp: (notes: Record<string, INote>, propName: string) => void;\r\n  storageSaveItem: (itemId: string, item: INote) => void;\r\n  storageDeleteItem: (itemId: string) => void;\r\n  storageGetAll: () => Record<string, INote>;\r\n  storageClearAll: () => void;\r\n}\r\n\r\nconst WithLocalStorage = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n): typeof React.Component => {\r\n  // eslint-disable-next-line react/display-name\r\n  return class extends React.Component<P> {\r\n    private replaceItem = (noteId: string, value: Record<string, INote[keyof INote]>): void => {\r\n      const storageItem = localStorage.getItem(noteId) ?? '';\r\n      const item = JSON.parse(storageItem);\r\n      const newItem = {\r\n        ...item,\r\n        ...value,\r\n      };\r\n      localStorage.setItem(noteId, JSON.stringify(newItem));\r\n    };\r\n\r\n    private updateItemsProp = (notes: Record<string, INote>, propName: keyof INote): void => {\r\n      Object.keys(notes).forEach((noteId) => {\r\n        const note = notes[noteId];\r\n        this.replaceItem(noteId, { [propName]: note[propName] });\r\n      });\r\n    };\r\n\r\n    private saveItem = (itemId: string, item: INote): void => {\r\n      localStorage.setItem(itemId, JSON.stringify(item));\r\n    };\r\n\r\n    private deleteItem = (itemId: string): void => {\r\n      localStorage.removeItem(itemId);\r\n    };\r\n\r\n    private getAllNotes = (): Record<string, INote> =>\r\n      Object.keys(localStorage).reduce(\r\n        (acc, key) => ({ ...acc, [key]: JSON.parse(localStorage[key]) }),\r\n        {},\r\n      );\r\n\r\n    private clearAll = (): void => localStorage.clear();\r\n\r\n    render(): React.ReactNode {\r\n      return (\r\n        <WrappedComponent\r\n          {...(this.props as P)}\r\n          storageReplaceItem={this.replaceItem}\r\n          storageSaveItem={this.saveItem}\r\n          storageDeleteItem={this.deleteItem}\r\n          storageUpdateItemsProp={this.updateItemsProp}\r\n          storageGetAll={this.getAllNotes}\r\n          storageClearAll={this.clearAll}\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithLocalStorage;\r\n","import * as React from 'react';\r\nimport Note, { DEFAULT_NOTE, INote } from '../../../components/note';\r\nimport WithLocalStorage from '../../../components/with-local-storage/WithLocalStorage';\r\nimport { isIntersects } from '../../../utils';\r\nimport './style.css';\r\n\r\ntype NotePosition = Pick<INote, 'left' | 'top'>;\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface INoteControllerProps {\r\n  note: INote;\r\n  noteId: string;\r\n  moveNoteToFront(noteId: string): void;\r\n  deleteNote(noteId: string): void;\r\n  storageReplaceItem?: (noteId: string, value: Record<string, INote[keyof INote]>) => void;\r\n  isSelected: boolean;\r\n  setSelectedNoteId(id: string): void;\r\n}\r\n\r\ninterface IState {\r\n  zIndex: number;\r\n  text: string;\r\n  position: NotePosition;\r\n  mouseNoteOffset: Position;\r\n  observer?: IntersectionObserver;\r\n  isResizeShown: boolean;\r\n  width: number;\r\n  height: number;\r\n  initialWidth: number;\r\n  initialHeight: number;\r\n  isEditMode: boolean;\r\n}\r\n\r\nclass NoteController extends React.Component<INoteControllerProps, IState> {\r\n  readonly noteRef: React.RefObject<HTMLTextAreaElement>;\r\n\r\n  readonly resizeRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: INoteControllerProps) {\r\n    super(props);\r\n\r\n    const { note } = props;\r\n    const { left, top } = note;\r\n    this.state = {\r\n      zIndex: 1,\r\n      text: note.text,\r\n      position: {\r\n        left,\r\n        top,\r\n      },\r\n      mouseNoteOffset: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      observer: undefined,\r\n      isResizeShown: false,\r\n      width: note.width,\r\n      height: note.height,\r\n      initialWidth: note.width,\r\n      initialHeight: note.height,\r\n      isEditMode: false,\r\n    };\r\n    this.noteRef = React.createRef();\r\n    this.resizeRef = React.createRef();\r\n  }\r\n\r\n  private onMouseDown = (event: React.MouseEvent<HTMLTextAreaElement>): void => {\r\n    const { setSelectedNoteId, noteId } = this.props;\r\n    const noteEl = this.noteRef.current;\r\n    if (!noteEl) return;\r\n    const noteRect = noteEl.getBoundingClientRect();\r\n    this.setState({\r\n      mouseNoteOffset: {\r\n        x: event.pageX - noteRect.left,\r\n        y: event.pageY - noteRect.top,\r\n      },\r\n      zIndex: 999,\r\n      isResizeShown: true,\r\n    });\r\n    document.addEventListener('mousemove', this.onMouseMove);\r\n    document.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    setSelectedNoteId(noteId);\r\n  };\r\n\r\n  private onMouseMove = (event: MouseEvent): void => {\r\n    const { mouseNoteOffset } = this.state;\r\n    const noteEl = this.noteRef.current;\r\n    if (!noteEl) return;\r\n\r\n    const note = noteEl.getBoundingClientRect();\r\n\r\n    const { x: mouseNoteOffsetX, y: mouseNoteOffsetY } = mouseNoteOffset;\r\n    const left = event.pageX - mouseNoteOffsetX;\r\n    let top = event.pageY - mouseNoteOffsetY;\r\n\r\n    if (top < 0) {\r\n      top = 0;\r\n    } else if (top + note.height > window.innerHeight) {\r\n      top = window.innerHeight - note.height;\r\n    }\r\n    this.setState({\r\n      position: { left, top },\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  private onMouseUp = (): void => {\r\n    document.removeEventListener('mousemove', this.onMouseMove);\r\n    document.removeEventListener('mouseup', this.onMouseUp);\r\n\r\n    const { storageReplaceItem, moveNoteToFront, noteId } = this.props;\r\n    const isNoteDeleted = this.deleteNoteIfNeeded();\r\n    if (isNoteDeleted) return;\r\n\r\n    const { position } = this.state;\r\n    moveNoteToFront(noteId);\r\n    storageReplaceItem && storageReplaceItem(noteId, position);\r\n    this.setState({\r\n      zIndex: 1,\r\n    });\r\n  };\r\n\r\n  private onTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { storageReplaceItem, noteId } = this.props;\r\n    const { value } = event.currentTarget;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n    storageReplaceItem && storageReplaceItem(noteId, { text: value });\r\n  };\r\n\r\n  private deleteNoteIfNeeded = (): boolean => {\r\n    const { noteId, deleteNote } = this.props;\r\n    const noteEl = this.noteRef.current;\r\n    const trashEl = document.getElementsByClassName('trash')[0];\r\n    if (!noteEl || !trashEl) return false;\r\n\r\n    const note = noteEl.getBoundingClientRect();\r\n    const trash = trashEl.getBoundingClientRect();\r\n    const isNoteNeedDeleted = isIntersects(note, trash);\r\n    if (isNoteNeedDeleted) {\r\n      deleteNote(noteId);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  private onResizeMouseDown = (event: React.MouseEvent<HTMLDivElement>): void => {\r\n    this.setState({\r\n      mouseNoteOffset: {\r\n        x: event.pageX,\r\n        y: event.pageY,\r\n      },\r\n      zIndex: 999,\r\n    });\r\n    document.addEventListener('mousemove', this.onResizeMouseMove);\r\n    document.addEventListener('mouseup', this.onResizeMouseUp);\r\n  };\r\n\r\n  private onResizeMouseMove = (event: MouseEvent): void => {\r\n    const { mouseNoteOffset, initialWidth, initialHeight } = this.state;\r\n    const { x: mouseNoteOffsetX, y: mouseNoteOffsetY } = mouseNoteOffset;\r\n\r\n    const deltaX = event.pageX - mouseNoteOffsetX;\r\n    const deltaY = event.pageY - mouseNoteOffsetY;\r\n    let width = initialWidth + deltaX;\r\n    let height = initialHeight + deltaY;\r\n    if (DEFAULT_NOTE.minWidth && width < DEFAULT_NOTE.minWidth) {\r\n      width = DEFAULT_NOTE.minWidth;\r\n    }\r\n    if (DEFAULT_NOTE.minHeight && height < DEFAULT_NOTE.minHeight) {\r\n      height = DEFAULT_NOTE.minHeight;\r\n    }\r\n\r\n    this.setState({\r\n      width,\r\n      height,\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  private onResizeMouseUp = (): void => {\r\n    const { storageReplaceItem, noteId } = this.props;\r\n    const { width, height } = this.state;\r\n    document.removeEventListener('mousemove', this.onResizeMouseMove);\r\n    document.removeEventListener('mouseup', this.onResizeMouseUp);\r\n\r\n    this.setState({\r\n      zIndex: 1,\r\n      initialWidth: width,\r\n      initialHeight: height,\r\n    });\r\n\r\n    storageReplaceItem && storageReplaceItem(noteId, { width, height });\r\n  };\r\n\r\n  private onDblClick = (): void => {\r\n    this.setState({\r\n      isEditMode: true,\r\n    });\r\n  };\r\n\r\n  render(): React.ReactNode {\r\n    const { isSelected } = this.props;\r\n    const { position, zIndex, text, width, height, isEditMode } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"resize\"\r\n          ref={this.resizeRef}\r\n          style={{\r\n            left: position.left - 10,\r\n            top: position.top - 10,\r\n            opacity: isSelected ? 1 : 0,\r\n            width: width + 20,\r\n            height: height + 30,\r\n            zIndex,\r\n          }}\r\n        >\r\n          <div className=\"resize-corner\" onMouseDown={this.onResizeMouseDown} />\r\n        </div>\r\n        <Note\r\n          text={text}\r\n          left={position.left}\r\n          top={position.top}\r\n          ref={this.noteRef}\r\n          zIndex={zIndex}\r\n          width={width}\r\n          height={height}\r\n          isEditMode={isEditMode}\r\n          onTextChange={this.onTextChange}\r\n          onMouseDown={this.onMouseDown}\r\n          onDblClick={this.onDblClick}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithLocalStorage(NoteController);\r\n","import * as React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { INote } from '../../components/note';\r\nimport NoteController from './note-controller';\r\n\r\ninterface IProps {\r\n  items: Record<string, INote>;\r\n  moveNoteToFront(noteId: string): void;\r\n  deleteNote(noteId: string): void;\r\n}\r\n\r\nconst BaseController: React.FC<IProps> = ({ items, moveNoteToFront, deleteNote }) => {\r\n  const [selectedNoteId, setSelectedNoteId] = useState<string>('');\r\n\r\n  const onClickOutsideNote = useCallback(\r\n    ({ target }: { target: EventTarget | null }): void => {\r\n      if (!target) return;\r\n\r\n      const targetClass = (target as Element).className;\r\n      if (!['note', 'resize-corner', 'resize'].includes(targetClass)) {\r\n        setSelectedNoteId('');\r\n      }\r\n    },\r\n    [setSelectedNoteId],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', onClickOutsideNote);\r\n    return () => {\r\n      document.removeEventListener('click', onClickOutsideNote);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(items).map((key) => (\r\n        <NoteController\r\n          key={key}\r\n          note={items[key]}\r\n          noteId={key}\r\n          moveNoteToFront={moveNoteToFront}\r\n          deleteNote={deleteNote}\r\n          isSelected={selectedNoteId === key}\r\n          setSelectedNoteId={setSelectedNoteId}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseController;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { DEFAULT_NOTE, INote } from '../../components/note';\r\nimport AddButton from '../../components/button/AddButton';\r\nimport { generateId } from '../../utils';\r\nimport WithLocalStorage, {\r\n  StorageProps,\r\n} from '../../components/with-local-storage/WithLocalStorage';\r\nimport { DeleteIcon } from '../../components/icon';\r\nimport Button, { ButtonSize } from '../../components/button/Button';\r\nimport './styles.css';\r\nimport BaseController from '../controllers/BaseController';\r\n\r\ntype IProps = StorageProps;\r\n\r\nconst NEW_NOTE_OFFSET = 20;\r\n\r\nconst createNewNote = (notesLength: number): INote => ({\r\n  ...DEFAULT_NOTE,\r\n  top: DEFAULT_NOTE.top + NEW_NOTE_OFFSET * notesLength,\r\n  left: DEFAULT_NOTE.left + NEW_NOTE_OFFSET * notesLength,\r\n  noteId: generateId(),\r\n  order: notesLength,\r\n});\r\n\r\n// change notes order property, because we remove current note to the end\r\nconst changeNotesOrder = (noteId: string, notes: Record<string, INote>): void => {\r\n  const notesKeys = Object.keys(notes);\r\n  let noteIndex = 0;\r\n  notesKeys.forEach((noteKey, index) => {\r\n    if (noteKey === noteId) {\r\n      noteIndex = index;\r\n      notes[noteKey].order = notesKeys.length - 1;\r\n    }\r\n    if (index > noteIndex) {\r\n      notes[noteKey].order = index - 1;\r\n    }\r\n  });\r\n};\r\n\r\nconst Workspace: React.FC<IProps> = ({\r\n  storageUpdateItemsProp,\r\n  storageSaveItem,\r\n  storageDeleteItem,\r\n  storageGetAll,\r\n  storageClearAll,\r\n}) => {\r\n  const [notes, setNotes] = useState<Record<string, INote>>({});\r\n\r\n  const createNote = useCallback(() => {\r\n    const notesKeys = Object.keys(notes);\r\n    const newNote = createNewNote(notesKeys.length);\r\n    setNotes({\r\n      ...notes,\r\n      [newNote.noteId]: newNote,\r\n    });\r\n\r\n    storageSaveItem(newNote.noteId, newNote);\r\n  }, [notes, storageSaveItem]);\r\n\r\n  const moveNoteToFront = useCallback(\r\n    (noteId: string) => {\r\n      const notesClone = { ...notes };\r\n\r\n      changeNotesOrder(noteId, notesClone);\r\n\r\n      const noteForMove = { ...notesClone[noteId] };\r\n      delete notesClone[noteId];\r\n\r\n      const newNotes = {\r\n        ...notesClone,\r\n        [noteId]: noteForMove,\r\n      };\r\n      setNotes(newNotes);\r\n\r\n      storageUpdateItemsProp(newNotes, 'order');\r\n    },\r\n    [notes, storageUpdateItemsProp],\r\n  );\r\n\r\n  const deleteNote = useCallback(\r\n    (noteId: string) => {\r\n      const notesClone = { ...notes };\r\n\r\n      changeNotesOrder(noteId, notesClone);\r\n\r\n      delete notesClone[noteId];\r\n      const newNotes = {\r\n        ...notesClone,\r\n      };\r\n      setNotes(newNotes);\r\n\r\n      storageDeleteItem(noteId);\r\n    },\r\n    [notes, storageDeleteItem],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const notes = storageGetAll();\r\n    const notesByOrder = Object.keys(notes)\r\n      .sort((a, b) => notes[a].order - notes[b].order)\r\n      .reduce((acc, key) => ({ ...acc, [key]: notes[key] }), {});\r\n\r\n    setNotes(notesByOrder);\r\n\r\n    return () => storageClearAll();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"workspace\">\r\n      <header className=\"header\">Sticky Notes</header>\r\n      <AddButton onClick={createNote} />\r\n      <BaseController items={notes} moveNoteToFront={moveNoteToFront} deleteNote={deleteNote} />\r\n      <div className=\"trash\">\r\n        <Button className=\"delete-button\" icon={<DeleteIcon />} size={ButtonSize.L} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nWorkspace.defaultProps = {\r\n  storageUpdateItemsProp: (): void => undefined,\r\n  storageSaveItem: (): void => undefined,\r\n  storageDeleteItem: (): void => undefined,\r\n  storageGetAll: (): Record<string, INote> => ({}),\r\n  storageClearAll: (): void => undefined,\r\n};\r\n\r\nexport default WithLocalStorage(Workspace);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Workspace from './containers/workspace';\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <div className=\"app\">\r\n      <Workspace />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/button/Button.tsx","components/note/index.tsx","components/icon/index.tsx","components/button/AddButton.tsx","utils/index.ts","components/local-storage/useLocalStorage.tsx","components/local-storage/WithLocalStorage.tsx","containers/controllers/note-controller/index.tsx","components/with-resize/WithResize.tsx","containers/controllers/BaseController.tsx","containers/workspace/index.tsx","App.tsx","index.tsx"],"names":["ButtonSize","DEFAULT_NOTE","noteId","text","top","left","order","width","height","minWidth","minHeight","Note","React","props","ref","zIndex","onTextChange","onMouseDown","onDblClick","isEditMode","className","style","value","readOnly","onChange","onDoubleClick","mainCss","Button","onClick","icon","size","M","AddIcon","viewBox","fill","xmlns","x","y","transform","DeleteIcon","d","AddButton","generateId","S4","Math","random","toString","substring","useLocalStorage","storageReplaceItem","storageItem","localStorage","getItem","item","JSON","parse","newItem","setItem","stringify","storageUpdateItemsProp","notes","propName","Object","keys","forEach","note","storageSaveItem","itemId","storageDeleteItem","removeItem","storageGetAll","reduce","acc","key","storageClearAll","clear","WithLocalStorage","WrappedComponent","Component","isSelected","forwardRef","useState","initialMousePosition","setInitialMousePosition","initialSize","setInitialSize","setSize","setZIndex","isDrag","setIsDrag","onResizeMouseMove","useCallback","event","deltaX","pageX","deltaY","pageY","preventDefault","onResizeMouseUp","onResizeMouseDown","useEffect","document","addEventListener","removeEventListener","opacity","WithResize","noteRef","setSelectedNoteId","noteEl","current","noteRect","getBoundingClientRect","setState","mouseNoteOffset","onMouseMove","onMouseUp","state","mouseNoteOffsetX","mouseNoteOffsetY","window","innerHeight","position","moveNoteToFront","deleteNoteIfNeeded","currentTarget","deleteNote","trashEl","getElementsByClassName","boundingClientRectA","boundingClientRectB","rectA","rectB","isIntersects","observer","undefined","this","BaseController","items","selectedNoteId","onClickOutsideNote","target","targetClass","includes","map","changeNotesOrder","notesKeys","noteIndex","noteKey","index","length","Workspace","setNotes","createNote","notesLength","newNote","notesClone","noteForMove","newNotes","notesByOrder","sort","a","b","L","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.27e6ccaa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Button.css';\r\n\r\nexport enum ButtonSize {\r\n  XS = 'XS',\r\n  S = 'S',\r\n  M = 'M',\r\n  L = 'L',\r\n}\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  size?: ButtonSize;\r\n  onClick?: () => void;\r\n  icon?: JSX.Element;\r\n}\r\n\r\nconst mainCss = 'button';\r\n\r\nconst Button: React.FC<IProps> = ({ onClick, icon, className = '', size = ButtonSize.M }) => {\r\n  return (\r\n    <div className={`${mainCss} ${className} ${mainCss}_size-${size}`} onClick={onClick}>\r\n      {icon}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import * as React from 'react';\r\nimport './styles.css';\r\n\r\nexport interface INote {\r\n  noteId: string;\r\n  text: string;\r\n  left: number;\r\n  top: number;\r\n  order: number;\r\n  width: number;\r\n  height: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n}\r\n\r\nexport type INoteProps = Omit<INote, 'order'> & {\r\n  zIndex: number;\r\n  isEditMode: boolean;\r\n  isSelected: boolean;\r\n  forwardRef: React.Ref<HTMLTextAreaElement>;\r\n  onMouseDown(event: React.MouseEvent<HTMLTextAreaElement>): void;\r\n  onTextChange(event: React.ChangeEvent<HTMLTextAreaElement>): void;\r\n  onDblClick(): void;\r\n};\r\n\r\nexport const DEFAULT_NOTE: INote = {\r\n  noteId: '',\r\n  text: '',\r\n  top: 120,\r\n  left: 30,\r\n  order: 0,\r\n  width: 200,\r\n  height: 200,\r\n  minWidth: 50,\r\n  minHeight: 50,\r\n};\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst Note: React.FC<INoteProps> = React.forwardRef<HTMLTextAreaElement, INoteProps>(\r\n  (props, ref): JSX.Element => {\r\n    const {\r\n      text,\r\n      left,\r\n      top,\r\n      zIndex,\r\n      onTextChange,\r\n      onMouseDown,\r\n      width,\r\n      height,\r\n      onDblClick,\r\n      isEditMode,\r\n    } = props;\r\n\r\n    return (\r\n      <textarea\r\n        ref={ref}\r\n        className=\"note\"\r\n        style={{ left, top, zIndex, width, height }}\r\n        value={text}\r\n        readOnly={!isEditMode}\r\n        onMouseDown={onMouseDown}\r\n        onChange={onTextChange}\r\n        onDoubleClick={onDblClick}\r\n      />\r\n    );\r\n  },\r\n);\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nexport const AddIcon = (): JSX.Element => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <rect x=\"5\" y=\"11\" width=\"14\" height=\"2\" fill=\"currentColor\" />\r\n    <rect x=\"13\" y=\"5\" width=\"14\" height=\"2\" transform=\"rotate(90 13 5)\" fill=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\nexport const DeleteIcon = (): JSX.Element => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport './styles/AddButton.css';\r\nimport { AddIcon } from '../icon';\r\n\r\ninterface IProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst AddButton: React.FC<IProps> = ({ onClick }) => {\r\n  return (\r\n    <div className=\"button__add\">\r\n      <Button onClick={onClick} icon={<AddIcon />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","export const generateId = (): string => {\r\n  // eslint-disable-next-line no-bitwise\r\n  const S4 = (): string => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n\r\n  return `${S4() + S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`;\r\n};\r\n\r\nexport const isIntersects = (\r\n  boundingClientRectA: DOMRect,\r\n  boundingClientRectB: DOMRect,\r\n): boolean => {\r\n  const rectA = {\r\n    x: boundingClientRectA.left,\r\n    x1: boundingClientRectA.left + boundingClientRectA.width,\r\n    y: boundingClientRectA.top,\r\n    y1: boundingClientRectA.top + boundingClientRectA.height,\r\n  };\r\n  const rectB = {\r\n    x: boundingClientRectB.left,\r\n    x1: boundingClientRectB.left + boundingClientRectB.width,\r\n    y: boundingClientRectB.top,\r\n    y1: boundingClientRectB.top + boundingClientRectB.height,\r\n  };\r\n  return !(rectA.x > rectB.x1 || rectA.x1 < rectB.x || rectA.y > rectB.y1 || rectA.y1 < rectB.y);\r\n};\r\n","import { INote } from '../note';\r\n\r\nexport interface StorageProps {\r\n  storageReplaceItem(noteId: string, value: Record<string, INote[keyof INote]>): void;\r\n  storageUpdateItemsProp(notes: Record<string, INote>, propName: keyof INote): void;\r\n  storageSaveItem(itemId: string, item: INote): void;\r\n  storageDeleteItem(itemId: string): void;\r\n  storageGetAll(): Record<string, INote>;\r\n  storageClearAll(): void;\r\n}\r\n\r\nexport default function useLocalStorage(): StorageProps {\r\n  const storageReplaceItem = (noteId: string, value: Record<string, INote[keyof INote]>): void => {\r\n    const storageItem = localStorage.getItem(noteId) ?? '';\r\n    const item = JSON.parse(storageItem);\r\n    const newItem = {\r\n      ...item,\r\n      ...value,\r\n    };\r\n    localStorage.setItem(noteId, JSON.stringify(newItem));\r\n  };\r\n\r\n  const storageUpdateItemsProp = (notes: Record<string, INote>, propName: keyof INote): void => {\r\n    Object.keys(notes).forEach((noteId) => {\r\n      const note = notes[noteId];\r\n      storageReplaceItem(noteId, { [propName]: note[propName] });\r\n    });\r\n  };\r\n\r\n  const storageSaveItem = (itemId: string, item: INote): void => {\r\n    localStorage.setItem(itemId, JSON.stringify(item));\r\n  };\r\n\r\n  const storageDeleteItem = (itemId: string): void => {\r\n    localStorage.removeItem(itemId);\r\n  };\r\n\r\n  const storageGetAll = (): Record<string, INote> =>\r\n    Object.keys(localStorage).reduce(\r\n      (acc, key) => ({ ...acc, [key]: JSON.parse(localStorage[key]) }),\r\n      {},\r\n    );\r\n\r\n  const storageClearAll = (): void => localStorage.clear();\r\n\r\n  return {\r\n    storageReplaceItem,\r\n    storageUpdateItemsProp,\r\n    storageSaveItem,\r\n    storageDeleteItem,\r\n    storageGetAll,\r\n    storageClearAll,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nconst WithLocalStorage = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n  // eslint-disable-next-line react/display-name\r\n): React.FC<P> => (props) => {\r\n  const {\r\n    storageReplaceItem,\r\n    storageSaveItem,\r\n    storageDeleteItem,\r\n    storageUpdateItemsProp,\r\n  } = useLocalStorage();\r\n\r\n  return (\r\n    <WrappedComponent\r\n      {...(props as P)}\r\n      storageReplaceItem={storageReplaceItem}\r\n      storageSaveItem={storageSaveItem}\r\n      storageDeleteItem={storageDeleteItem}\r\n      storageUpdateItemsProp={storageUpdateItemsProp}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WithLocalStorage;\r\n","import * as React from 'react';\r\nimport Note, { INote } from '../../../components/note';\r\nimport WithLocalStorage from '../../../components/local-storage/WithLocalStorage';\r\nimport { isIntersects } from '../../../utils';\r\nimport { IPosition } from '../../../types';\r\nimport WithResize from '../../../components/with-resize/WithResize';\r\n\r\ntype NotePosition = Pick<INote, 'left' | 'top'>;\r\n\r\nexport interface INoteControllerProps {\r\n  note: INote;\r\n  noteId: string;\r\n  moveNoteToFront(noteId: string): void;\r\n  deleteNote(noteId: string): void;\r\n  storageReplaceItem?: (noteId: string, value: Record<string, INote[keyof INote]>) => void;\r\n  isSelected: boolean;\r\n  setSelectedNoteId(id: string): void;\r\n}\r\n\r\ninterface IState {\r\n  zIndex: number;\r\n  text: string;\r\n  position: NotePosition;\r\n  mouseNoteOffset: IPosition;\r\n  observer?: IntersectionObserver;\r\n  isEditMode: boolean;\r\n}\r\n\r\nconst Component = WithResize(Note);\r\n\r\nclass NoteController extends React.Component<INoteControllerProps, IState> {\r\n  readonly noteRef: React.RefObject<HTMLTextAreaElement>;\r\n\r\n  constructor(props: INoteControllerProps) {\r\n    super(props);\r\n\r\n    const { note } = props;\r\n    const { left, top } = note;\r\n    this.state = {\r\n      zIndex: 1,\r\n      text: note.text,\r\n      position: {\r\n        left,\r\n        top,\r\n      },\r\n      mouseNoteOffset: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      observer: undefined,\r\n      isEditMode: false,\r\n    };\r\n    this.noteRef = React.createRef();\r\n  }\r\n\r\n  private onMouseDown = (event: React.MouseEvent<HTMLTextAreaElement>): void => {\r\n    const { setSelectedNoteId, noteId } = this.props;\r\n    const noteEl = this.noteRef.current;\r\n    if (!noteEl) return;\r\n    const noteRect = noteEl.getBoundingClientRect();\r\n    this.setState({\r\n      mouseNoteOffset: {\r\n        x: event.pageX - noteRect.left,\r\n        y: event.pageY - noteRect.top,\r\n      },\r\n      zIndex: 999,\r\n    });\r\n    document.addEventListener('mousemove', this.onMouseMove);\r\n    document.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    setSelectedNoteId(noteId);\r\n  };\r\n\r\n  private onMouseMove = (event: MouseEvent): void => {\r\n    const { mouseNoteOffset } = this.state;\r\n    const noteEl = this.noteRef.current;\r\n    if (!noteEl) return;\r\n\r\n    const note = noteEl.getBoundingClientRect();\r\n\r\n    const { x: mouseNoteOffsetX, y: mouseNoteOffsetY } = mouseNoteOffset;\r\n    const left = event.pageX - mouseNoteOffsetX;\r\n    let top = event.pageY - mouseNoteOffsetY;\r\n\r\n    if (top < 0) {\r\n      top = 0;\r\n    } else if (top + note.height > window.innerHeight) {\r\n      top = window.innerHeight - note.height;\r\n    }\r\n    this.setState({\r\n      position: { left, top },\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  private onMouseUp = (): void => {\r\n    document.removeEventListener('mousemove', this.onMouseMove);\r\n    document.removeEventListener('mouseup', this.onMouseUp);\r\n\r\n    const { storageReplaceItem, moveNoteToFront, noteId } = this.props;\r\n    const isNoteDeleted = this.deleteNoteIfNeeded();\r\n    if (isNoteDeleted) return;\r\n\r\n    const { position } = this.state;\r\n    moveNoteToFront(noteId);\r\n    storageReplaceItem && storageReplaceItem(noteId, position);\r\n    this.setState({\r\n      zIndex: 1,\r\n    });\r\n  };\r\n\r\n  private onTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { storageReplaceItem, noteId } = this.props;\r\n    const { value } = event.currentTarget;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n    storageReplaceItem && storageReplaceItem(noteId, { text: value });\r\n  };\r\n\r\n  private deleteNoteIfNeeded = (): boolean => {\r\n    const { noteId, deleteNote } = this.props;\r\n    const noteEl = this.noteRef.current;\r\n    const trashEl = document.getElementsByClassName('trash')[0];\r\n    if (!noteEl || !trashEl) return false;\r\n\r\n    const note = noteEl.getBoundingClientRect();\r\n    const trash = trashEl.getBoundingClientRect();\r\n    const isNoteNeedDeleted = isIntersects(note, trash);\r\n    if (isNoteNeedDeleted) {\r\n      deleteNote(noteId);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  private onDblClick = (): void => {\r\n    this.setState({\r\n      isEditMode: true,\r\n    });\r\n  };\r\n\r\n  render(): React.ReactNode {\r\n    const { noteId, isSelected, note } = this.props;\r\n    const { width, height } = note;\r\n    const { position, zIndex, text, isEditMode } = this.state;\r\n\r\n    return (\r\n      <Component\r\n        noteId={noteId}\r\n        text={text}\r\n        left={position.left}\r\n        top={position.top}\r\n        forwardRef={this.noteRef}\r\n        zIndex={zIndex}\r\n        width={width}\r\n        height={height}\r\n        isEditMode={isEditMode}\r\n        isSelected={isSelected}\r\n        onTextChange={this.onTextChange}\r\n        onMouseDown={this.onMouseDown}\r\n        onDblClick={this.onDblClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithLocalStorage(NoteController);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { IPosition, ISize } from '../../types';\r\nimport { DEFAULT_NOTE, INoteProps } from '../note';\r\nimport useLocalStorage from '../local-storage/useLocalStorage';\r\nimport './style.css';\r\n\r\ntype IProps = INoteProps & {};\r\n\r\nconst WithResize = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n  // eslint-disable-next-line react/display-name\r\n): React.FC<P & IProps> => (props): JSX.Element => {\r\n  const { noteId, width, height, left, top, isSelected, forwardRef } = props;\r\n\r\n  const { storageReplaceItem } = useLocalStorage();\r\n\r\n  const [initialMousePosition, setInitialMousePosition] = useState<IPosition>({ x: 0, y: 0 });\r\n  const [initialSize, setInitialSize] = useState<ISize>({ width, height });\r\n  const [size, setSize] = useState<ISize>({ width, height });\r\n  const [zIndex, setZIndex] = useState<number>(1);\r\n  const [isDrag, setIsDrag] = useState<boolean>(false);\r\n\r\n  const onResizeMouseMove = useCallback(\r\n    (event: MouseEvent): void => {\r\n      if (!isDrag) return;\r\n\r\n      const deltaX = event.pageX - initialMousePosition.x;\r\n      const deltaY = event.pageY - initialMousePosition.y;\r\n      let width = initialSize.width + deltaX;\r\n      let height = initialSize.height + deltaY;\r\n      if (DEFAULT_NOTE.minWidth && width < DEFAULT_NOTE.minWidth) {\r\n        width = DEFAULT_NOTE.minWidth;\r\n      }\r\n      if (DEFAULT_NOTE.minHeight && height < DEFAULT_NOTE.minHeight) {\r\n        height = DEFAULT_NOTE.minHeight;\r\n      }\r\n\r\n      setSize({\r\n        width,\r\n        height,\r\n      });\r\n\r\n      event.preventDefault();\r\n    },\r\n    [initialMousePosition, initialSize, setSize, isDrag],\r\n  );\r\n\r\n  const onResizeMouseUp = useCallback((): void => {\r\n    if (!isDrag) return;\r\n\r\n    const { width, height } = size;\r\n    setInitialSize({\r\n      width,\r\n      height,\r\n    });\r\n    setZIndex(1);\r\n    setIsDrag(false);\r\n    setInitialMousePosition({ x: 0, y: 0 });\r\n\r\n    storageReplaceItem(noteId, { width, height });\r\n  }, [storageReplaceItem, size, setInitialSize, setZIndex, noteId, isDrag]);\r\n\r\n  const onResizeMouseDown = useCallback(\r\n    (event: React.MouseEvent<HTMLDivElement>): void => {\r\n      setInitialMousePosition({\r\n        x: event.pageX,\r\n        y: event.pageY,\r\n      });\r\n      setZIndex(999);\r\n      setIsDrag(true);\r\n    },\r\n    [onResizeMouseMove, onResizeMouseUp],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isDrag) {\r\n      document.addEventListener('mousemove', onResizeMouseMove);\r\n    }\r\n\r\n    return (): void => {\r\n      document.removeEventListener('mousemove', onResizeMouseMove);\r\n    };\r\n  }, [isDrag]);\r\n\r\n  useEffect(() => {\r\n    if (isDrag) {\r\n      document.addEventListener('mouseup', onResizeMouseUp);\r\n    }\r\n\r\n    return (): void => {\r\n      document.removeEventListener('mouseup', onResizeMouseUp);\r\n    };\r\n  }, [isDrag, size]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"resize\"\r\n        style={{\r\n          left: left - 10,\r\n          top: top - 10,\r\n          opacity: isSelected ? 1 : 0,\r\n          width: size.width + 20,\r\n          height: size.height + 30,\r\n          zIndex,\r\n        }}\r\n      >\r\n        <div className=\"resize-corner\" onMouseDown={onResizeMouseDown} />\r\n      </div>\r\n      <WrappedComponent\r\n        {...(props as P)}\r\n        ref={forwardRef}\r\n        width={size.width}\r\n        height={size.height}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WithResize;\r\n","import * as React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { INote } from '../../components/note';\r\nimport NoteController from './note-controller';\r\n\r\ninterface IProps {\r\n  items: Record<string, INote>;\r\n  moveNoteToFront(noteId: string): void;\r\n  deleteNote(noteId: string): void;\r\n}\r\n\r\nconst BaseController: React.FC<IProps> = ({ items, moveNoteToFront, deleteNote }) => {\r\n  const [selectedNoteId, setSelectedNoteId] = useState<string>('');\r\n\r\n  const onClickOutsideNote = useCallback(\r\n    ({ target }: { target: EventTarget | null }): void => {\r\n      if (!target) return;\r\n\r\n      const targetClass = (target as Element).className;\r\n      if (!['note', 'resize-corner', 'resize'].includes(targetClass)) {\r\n        setSelectedNoteId('');\r\n      }\r\n    },\r\n    [setSelectedNoteId],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', onClickOutsideNote);\r\n    return () => {\r\n      document.removeEventListener('click', onClickOutsideNote);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(items).map((key) => (\r\n        <NoteController\r\n          key={key}\r\n          note={items[key]}\r\n          noteId={key}\r\n          moveNoteToFront={moveNoteToFront}\r\n          deleteNote={deleteNote}\r\n          isSelected={selectedNoteId === key}\r\n          setSelectedNoteId={setSelectedNoteId}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseController;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { DEFAULT_NOTE, INote } from '../../components/note';\r\nimport AddButton from '../../components/button/AddButton';\r\nimport { generateId } from '../../utils';\r\nimport { DeleteIcon } from '../../components/icon';\r\nimport Button, { ButtonSize } from '../../components/button/Button';\r\nimport './styles.css';\r\nimport BaseController from '../controllers/BaseController';\r\nimport useLocalStorage from '../../components/local-storage/useLocalStorage';\r\n\r\nconst NEW_NOTE_OFFSET = 20;\r\n\r\nconst createNewNote = (notesLength: number): INote => ({\r\n  ...DEFAULT_NOTE,\r\n  top: DEFAULT_NOTE.top + NEW_NOTE_OFFSET * notesLength,\r\n  left: DEFAULT_NOTE.left + NEW_NOTE_OFFSET * notesLength,\r\n  noteId: generateId(),\r\n  order: notesLength,\r\n});\r\n\r\n// change notes order property, because we remove current note to the end\r\nconst changeNotesOrder = (noteId: string, notes: Record<string, INote>): void => {\r\n  const notesKeys = Object.keys(notes);\r\n  let noteIndex = 0;\r\n  notesKeys.forEach((noteKey, index) => {\r\n    if (noteKey === noteId) {\r\n      noteIndex = index;\r\n      notes[noteKey].order = notesKeys.length - 1;\r\n    }\r\n    if (index > noteIndex) {\r\n      notes[noteKey].order = index - 1;\r\n    }\r\n  });\r\n};\r\n\r\nconst Workspace: React.FC = (): JSX.Element => {\r\n  const [notes, setNotes] = useState<Record<string, INote>>({});\r\n  const {\r\n    storageSaveItem,\r\n    storageDeleteItem,\r\n    storageUpdateItemsProp,\r\n    storageGetAll,\r\n    storageClearAll,\r\n  } = useLocalStorage();\r\n\r\n  const createNote = useCallback(() => {\r\n    const notesKeys = Object.keys(notes);\r\n    const newNote = createNewNote(notesKeys.length);\r\n    setNotes({\r\n      ...notes,\r\n      [newNote.noteId]: newNote,\r\n    });\r\n\r\n    storageSaveItem(newNote.noteId, newNote);\r\n  }, [notes, storageSaveItem]);\r\n\r\n  const moveNoteToFront = useCallback(\r\n    (noteId: string) => {\r\n      const notesClone = { ...notes };\r\n\r\n      changeNotesOrder(noteId, notesClone);\r\n\r\n      const noteForMove = { ...notesClone[noteId] };\r\n      delete notesClone[noteId];\r\n\r\n      const newNotes = {\r\n        ...notesClone,\r\n        [noteId]: noteForMove,\r\n      };\r\n      setNotes(newNotes);\r\n\r\n      storageUpdateItemsProp(newNotes, 'order');\r\n    },\r\n    [notes, storageUpdateItemsProp],\r\n  );\r\n\r\n  const deleteNote = useCallback(\r\n    (noteId: string) => {\r\n      const notesClone = { ...notes };\r\n\r\n      changeNotesOrder(noteId, notesClone);\r\n\r\n      delete notesClone[noteId];\r\n      const newNotes = {\r\n        ...notesClone,\r\n      };\r\n      setNotes(newNotes);\r\n\r\n      storageDeleteItem(noteId);\r\n    },\r\n    [notes, storageDeleteItem],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const notes = storageGetAll();\r\n    const notesByOrder = Object.keys(notes)\r\n      .sort((a, b) => notes[a].order - notes[b].order)\r\n      .reduce((acc, key) => ({ ...acc, [key]: notes[key] }), {});\r\n\r\n    setNotes(notesByOrder);\r\n\r\n    return () => storageClearAll();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"workspace\">\r\n      <header className=\"header\">Sticky Notes</header>\r\n      <AddButton onClick={createNote} />\r\n      <BaseController items={notes} moveNoteToFront={moveNoteToFront} deleteNote={deleteNote} />\r\n      <div className=\"trash\">\r\n        <Button className=\"delete-button\" icon={<DeleteIcon />} size={ButtonSize.L} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Workspace from './containers/workspace';\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <div className=\"app\">\r\n      <Workspace />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
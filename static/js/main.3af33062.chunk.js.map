{"version":3,"sources":["components/button/Button.tsx","components/note/index.tsx","components/icon/index.tsx","components/button/AddButton.tsx","utils/index.ts","components/with-local-storage/WithLocalStorage.tsx","containers/controllers/note-controller/index.tsx","containers/controllers/BaseController.tsx","containers/workspace/index.tsx","App.tsx","index.tsx"],"names":["ButtonSize","DEFAULT_NOTE","noteId","text","top","left","order","width","height","minWidth","minHeight","Note","React","props","ref","zIndex","onTextChange","onMouseDown","onDblClick","isEditMode","className","style","value","readOnly","onChange","onDoubleClick","mainCss","Button","onClick","icon","size","M","AddIcon","viewBox","fill","xmlns","x","y","transform","DeleteIcon","d","AddButton","generateId","S4","Math","random","toString","substring","WithLocalStorage","WrappedComponent","replaceItem","storageItem","localStorage","getItem","item","JSON","parse","newItem","setItem","stringify","updateItemsProp","notes","propName","Object","keys","forEach","note","saveItem","itemId","deleteItem","removeItem","this","storageReplaceItem","storageSaveItem","storageDeleteItem","storageUpdateItemsProp","Component","noteRef","resizeRef","event","setSelectedNoteId","noteEl","current","noteRect","getBoundingClientRect","setState","mouseNoteOffset","pageX","pageY","isResizeShown","document","addEventListener","onMouseMove","onMouseUp","state","mouseNoteOffsetX","mouseNoteOffsetY","window","innerHeight","position","removeEventListener","moveNoteToFront","deleteNoteIfNeeded","currentTarget","deleteNote","trashEl","getElementsByClassName","boundingClientRectA","boundingClientRectB","rectA","rectB","isIntersects","onResizeMouseDown","onResizeMouseMove","onResizeMouseUp","initialWidth","initialHeight","observer","undefined","isSelected","opacity","BaseController","items","useState","selectedNoteId","onClickOutsideNote","useCallback","target","targetClass","includes","useEffect","map","key","changeNotesOrder","notesKeys","noteIndex","noteKey","index","length","setNotes","createNote","notesLength","newNote","notesClone","noteForMove","newNotes","reduce","acc","notesByOrder","sort","a","b","clear","L","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3af33062.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Button.css';\r\n\r\nexport enum ButtonSize {\r\n  XS = 'XS',\r\n  S = 'S',\r\n  M = 'M',\r\n  L = 'L',\r\n}\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  size?: ButtonSize;\r\n  onClick?: () => void;\r\n  icon?: JSX.Element;\r\n}\r\n\r\nconst mainCss = 'button';\r\n\r\nconst Button: React.FC<IProps> = ({ onClick, icon, className = '', size = ButtonSize.M }) => {\r\n  return (\r\n    <div className={`${mainCss} ${className} ${mainCss}_size-${size}`} onClick={onClick}>\r\n      {icon}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import * as React from 'react';\r\nimport './styles.css';\r\n\r\nexport interface INote {\r\n  noteId: string;\r\n  text: string;\r\n  left: number;\r\n  top: number;\r\n  order: number;\r\n  width: number;\r\n  height: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n}\r\n\r\ntype IProps = Omit<INote, 'noteId' | 'order'> & {\r\n  zIndex: number;\r\n  isEditMode: boolean;\r\n  ref?: React.Ref<HTMLTextAreaElement>;\r\n  onMouseDown(event: React.MouseEvent<HTMLTextAreaElement>): void;\r\n  onTextChange(event: React.ChangeEvent<HTMLTextAreaElement>): void;\r\n  onDblClick(): void;\r\n};\r\n\r\nexport const DEFAULT_NOTE: INote = {\r\n  noteId: '',\r\n  text: '',\r\n  top: 120,\r\n  left: 30,\r\n  order: 0,\r\n  width: 200,\r\n  height: 200,\r\n  minWidth: 50,\r\n  minHeight: 50,\r\n};\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst Note: React.FC<IProps> = React.forwardRef<HTMLTextAreaElement, IProps>(\r\n  (props, ref): JSX.Element => {\r\n    const {\r\n      text,\r\n      left,\r\n      top,\r\n      zIndex,\r\n      onTextChange,\r\n      onMouseDown,\r\n      width,\r\n      height,\r\n      onDblClick,\r\n      isEditMode,\r\n    } = props;\r\n\r\n    return (\r\n      <textarea\r\n        ref={ref}\r\n        className=\"note\"\r\n        style={{ left, top, zIndex, width, height }}\r\n        value={text}\r\n        readOnly={!isEditMode}\r\n        onMouseDown={onMouseDown}\r\n        onChange={onTextChange}\r\n        onDoubleClick={onDblClick}\r\n      />\r\n    );\r\n  },\r\n);\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nexport const AddIcon = (): JSX.Element => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <rect x=\"5\" y=\"11\" width=\"14\" height=\"2\" fill=\"currentColor\" />\r\n    <rect x=\"13\" y=\"5\" width=\"14\" height=\"2\" transform=\"rotate(90 13 5)\" fill=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\nexport const DeleteIcon = (): JSX.Element => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport './styles/AddButton.css';\r\nimport { AddIcon } from '../icon';\r\n\r\ninterface IProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst AddButton: React.FC<IProps> = ({ onClick }) => {\r\n  return (\r\n    <div className=\"button__add\">\r\n      <Button onClick={onClick} icon={<AddIcon />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","export const generateId = (): string => {\r\n  // eslint-disable-next-line no-bitwise\r\n  const S4 = (): string => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n\r\n  return `${S4() + S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`;\r\n};\r\n\r\nexport const isIntersects = (\r\n  boundingClientRectA: DOMRect,\r\n  boundingClientRectB: DOMRect,\r\n): boolean => {\r\n  const rectA = {\r\n    x: boundingClientRectA.left,\r\n    x1: boundingClientRectA.left + boundingClientRectA.width,\r\n    y: boundingClientRectA.top,\r\n    y1: boundingClientRectA.top + boundingClientRectA.height,\r\n  };\r\n  const rectB = {\r\n    x: boundingClientRectB.left,\r\n    x1: boundingClientRectB.left + boundingClientRectB.width,\r\n    y: boundingClientRectB.top,\r\n    y1: boundingClientRectB.top + boundingClientRectB.height,\r\n  };\r\n  return !(rectA.x > rectB.x1 || rectA.x1 < rectB.x || rectA.y > rectB.y1 || rectA.y1 < rectB.y);\r\n};\r\n","import React from 'react';\r\nimport { INote } from '../note';\r\n\r\nconst WithLocalStorage = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n): typeof React.Component => {\r\n  // eslint-disable-next-line react/display-name\r\n  return class extends React.Component<P> {\r\n    private replaceItem = (noteId: string, value: Record<string, INote[keyof INote]>): void => {\r\n      const storageItem = localStorage.getItem(noteId) ?? '';\r\n      const item = JSON.parse(storageItem);\r\n      const newItem = {\r\n        ...item,\r\n        ...value,\r\n      };\r\n      localStorage.setItem(noteId, JSON.stringify(newItem));\r\n    };\r\n\r\n    private updateItemsProp = (notes: Record<string, INote>, propName: keyof INote): void => {\r\n      Object.keys(notes).forEach((noteId) => {\r\n        const note = notes[noteId];\r\n        this.replaceItem(noteId, { [propName]: note[propName] });\r\n      });\r\n    };\r\n\r\n    private saveItem = (itemId: string, item: INote): void => {\r\n      localStorage.setItem(itemId, JSON.stringify(item));\r\n    };\r\n\r\n    private deleteItem = (itemId: string): void => {\r\n      localStorage.removeItem(itemId);\r\n    };\r\n\r\n    render(): React.ReactNode {\r\n      return (\r\n        <WrappedComponent\r\n          {...(this.props as P)}\r\n          storageReplaceItem={this.replaceItem}\r\n          storageSaveItem={this.saveItem}\r\n          storageDeleteItem={this.deleteItem}\r\n          storageUpdateItemsProp={this.updateItemsProp}\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithLocalStorage;\r\n","import * as React from 'react';\r\nimport Note, { DEFAULT_NOTE, INote } from '../../../components/note';\r\nimport WithLocalStorage from '../../../components/with-local-storage/WithLocalStorage';\r\nimport { isIntersects } from '../../../utils';\r\nimport './style.css';\r\n\r\ntype NotePosition = Pick<INote, 'left' | 'top'>;\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface INoteControllerProps {\r\n  note: INote;\r\n  noteId: string;\r\n  moveNoteToFront(noteId: string): void;\r\n  deleteNote(noteId: string): void;\r\n  storageReplaceItem?: (noteId: string, value: Record<string, INote[keyof INote]>) => void;\r\n  isSelected: boolean;\r\n  setSelectedNoteId(id: string): void;\r\n}\r\n\r\ninterface IState {\r\n  zIndex: number;\r\n  text: string;\r\n  position: NotePosition;\r\n  mouseNoteOffset: Position;\r\n  observer?: IntersectionObserver;\r\n  isResizeShown: boolean;\r\n  width: number;\r\n  height: number;\r\n  initialWidth: number;\r\n  initialHeight: number;\r\n  isEditMode: boolean;\r\n}\r\n\r\nclass NoteController extends React.Component<INoteControllerProps, IState> {\r\n  readonly noteRef: React.RefObject<HTMLTextAreaElement>;\r\n\r\n  readonly resizeRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: INoteControllerProps) {\r\n    super(props);\r\n\r\n    const { note } = props;\r\n    const { left, top } = note;\r\n    this.state = {\r\n      zIndex: 1,\r\n      text: note.text,\r\n      position: {\r\n        left,\r\n        top,\r\n      },\r\n      mouseNoteOffset: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      observer: undefined,\r\n      isResizeShown: false,\r\n      width: DEFAULT_NOTE.width,\r\n      height: DEFAULT_NOTE.height,\r\n      initialWidth: DEFAULT_NOTE.width,\r\n      initialHeight: DEFAULT_NOTE.height,\r\n      isEditMode: false,\r\n    };\r\n    this.noteRef = React.createRef();\r\n    this.resizeRef = React.createRef();\r\n  }\r\n\r\n  private onMouseDown = (event: React.MouseEvent<HTMLTextAreaElement>): void => {\r\n    const { setSelectedNoteId, noteId } = this.props;\r\n    const noteEl = this.noteRef.current;\r\n    if (!noteEl) return;\r\n    const noteRect = noteEl.getBoundingClientRect();\r\n    this.setState({\r\n      mouseNoteOffset: {\r\n        x: event.pageX - noteRect.left,\r\n        y: event.pageY - noteRect.top,\r\n      },\r\n      zIndex: 999,\r\n      isResizeShown: true,\r\n    });\r\n    document.addEventListener('mousemove', this.onMouseMove);\r\n    document.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    setSelectedNoteId(noteId);\r\n  };\r\n\r\n  private onMouseMove = (event: MouseEvent): void => {\r\n    const { mouseNoteOffset } = this.state;\r\n    const noteEl = this.noteRef.current;\r\n    if (!noteEl) return;\r\n\r\n    const note = noteEl.getBoundingClientRect();\r\n\r\n    const { x: mouseNoteOffsetX, y: mouseNoteOffsetY } = mouseNoteOffset;\r\n    const left = event.pageX - mouseNoteOffsetX;\r\n    let top = event.pageY - mouseNoteOffsetY;\r\n\r\n    if (top < 0) {\r\n      top = 0;\r\n    } else if (top + note.height > window.innerHeight) {\r\n      top = window.innerHeight - note.height;\r\n    }\r\n    this.setState({\r\n      position: { left, top },\r\n    });\r\n  };\r\n\r\n  private onMouseUp = (): void => {\r\n    document.removeEventListener('mousemove', this.onMouseMove);\r\n    document.removeEventListener('mouseup', this.onMouseUp);\r\n\r\n    const { storageReplaceItem, moveNoteToFront, noteId } = this.props;\r\n    const isNoteDeleted = this.deleteNoteIfNeeded();\r\n    if (isNoteDeleted) return;\r\n\r\n    const { position } = this.state;\r\n    moveNoteToFront(noteId);\r\n    storageReplaceItem && storageReplaceItem(noteId, position);\r\n    this.setState({\r\n      zIndex: 1,\r\n    });\r\n  };\r\n\r\n  private onTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { storageReplaceItem, noteId } = this.props;\r\n    const { value } = event.currentTarget;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n    storageReplaceItem && storageReplaceItem(noteId, { text: value });\r\n  };\r\n\r\n  private deleteNoteIfNeeded = (): boolean => {\r\n    const { noteId, deleteNote } = this.props;\r\n    const noteEl = this.noteRef.current;\r\n    const trashEl = document.getElementsByClassName('trash')[0];\r\n    if (!noteEl || !trashEl) return false;\r\n\r\n    const note = noteEl.getBoundingClientRect();\r\n    const trash = trashEl.getBoundingClientRect();\r\n    const isNoteNeedDeleted = isIntersects(note, trash);\r\n    if (isNoteNeedDeleted) {\r\n      deleteNote(noteId);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  private onResizeMouseDown = (event: React.MouseEvent<HTMLDivElement>): void => {\r\n    this.setState({\r\n      mouseNoteOffset: {\r\n        x: event.pageX,\r\n        y: event.pageY,\r\n      },\r\n      zIndex: 999,\r\n    });\r\n    document.addEventListener('mousemove', this.onResizeMouseMove);\r\n    document.addEventListener('mouseup', this.onResizeMouseUp);\r\n  };\r\n\r\n  private onResizeMouseMove = (event: MouseEvent): void => {\r\n    const { mouseNoteOffset, initialWidth, initialHeight } = this.state;\r\n    const { x: mouseNoteOffsetX, y: mouseNoteOffsetY } = mouseNoteOffset;\r\n\r\n    const deltaX = event.pageX - mouseNoteOffsetX;\r\n    const deltaY = event.pageY - mouseNoteOffsetY;\r\n    let width = initialWidth + deltaX;\r\n    let height = initialHeight + deltaY;\r\n    if (DEFAULT_NOTE.minWidth && width < DEFAULT_NOTE.minWidth) {\r\n      width = DEFAULT_NOTE.minWidth;\r\n    }\r\n    if (DEFAULT_NOTE.minHeight && height < DEFAULT_NOTE.minHeight) {\r\n      height = DEFAULT_NOTE.minHeight;\r\n    }\r\n\r\n    this.setState({\r\n      width,\r\n      height,\r\n    });\r\n  };\r\n\r\n  private onResizeMouseUp = (): void => {\r\n    const { width, height } = this.state;\r\n    document.removeEventListener('mousemove', this.onResizeMouseMove);\r\n    document.removeEventListener('mouseup', this.onResizeMouseUp);\r\n\r\n    this.setState({\r\n      zIndex: 1,\r\n      initialWidth: width,\r\n      initialHeight: height,\r\n    });\r\n  };\r\n\r\n  private onDblClick = (): void => {\r\n    this.setState({\r\n      isEditMode: true,\r\n    });\r\n  };\r\n\r\n  render(): React.ReactNode {\r\n    const { isSelected } = this.props;\r\n    const { position, zIndex, text, width, height, isEditMode } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"resize\"\r\n          ref={this.resizeRef}\r\n          style={{\r\n            left: position.left - 10,\r\n            top: position.top - 10,\r\n            opacity: isSelected ? 1 : 0,\r\n            width: width + 20,\r\n            height: height + 30,\r\n            zIndex,\r\n          }}\r\n        >\r\n          <div className=\"resize-corner\" onMouseDown={this.onResizeMouseDown} />\r\n        </div>\r\n        <Note\r\n          text={text}\r\n          left={position.left}\r\n          top={position.top}\r\n          ref={this.noteRef}\r\n          zIndex={zIndex}\r\n          width={width}\r\n          height={height}\r\n          isEditMode={isEditMode}\r\n          onTextChange={this.onTextChange}\r\n          onMouseDown={this.onMouseDown}\r\n          onDblClick={this.onDblClick}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithLocalStorage(NoteController);\r\n","import * as React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { INote } from '../../components/note';\r\nimport NoteController from './note-controller';\r\n\r\ninterface IProps {\r\n  items: Record<string, INote>;\r\n  moveNoteToFront(noteId: string): void;\r\n  deleteNote(noteId: string): void;\r\n}\r\n\r\nconst BaseController: React.FC<IProps> = ({ items, moveNoteToFront, deleteNote }) => {\r\n  const [selectedNoteId, setSelectedNoteId] = useState<string>('');\r\n\r\n  const onClickOutsideNote = useCallback(\r\n    ({ target }: { target: EventTarget | null }): void => {\r\n      if (!target) return;\r\n\r\n      const targetClass = (target as Element).className;\r\n      if (!['note', 'resize-corner', 'resize'].includes(targetClass)) {\r\n        setSelectedNoteId('');\r\n      }\r\n    },\r\n    [setSelectedNoteId],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', onClickOutsideNote);\r\n    return () => {\r\n      document.removeEventListener('click', onClickOutsideNote);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(items).map((key) => (\r\n        <NoteController\r\n          key={key}\r\n          note={items[key]}\r\n          noteId={key}\r\n          moveNoteToFront={moveNoteToFront}\r\n          deleteNote={deleteNote}\r\n          isSelected={selectedNoteId === key}\r\n          setSelectedNoteId={setSelectedNoteId}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseController;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { DEFAULT_NOTE, INote } from '../../components/note';\r\nimport AddButton from '../../components/button/AddButton';\r\nimport { generateId } from '../../utils';\r\nimport WithLocalStorage from '../../components/with-local-storage/WithLocalStorage';\r\nimport { DeleteIcon } from '../../components/icon';\r\nimport Button, { ButtonSize } from '../../components/button/Button';\r\nimport './styles.css';\r\nimport BaseController from '../controllers/BaseController';\r\n\r\ninterface IProps {\r\n  storageUpdateItemsProp?: (notes: Record<string, INote>, propName: string) => void;\r\n  storageSaveItem?: (itemId: string, item: INote) => void;\r\n  storageDeleteItem?: (itemId: string) => void;\r\n}\r\n\r\nconst NEW_NOTE_OFFSET = 20;\r\n\r\nconst createNewNote = (notesLength: number): INote => ({\r\n  ...DEFAULT_NOTE,\r\n  top: DEFAULT_NOTE.top + NEW_NOTE_OFFSET * notesLength,\r\n  left: DEFAULT_NOTE.left + NEW_NOTE_OFFSET * notesLength,\r\n  noteId: generateId(),\r\n  order: notesLength,\r\n});\r\n\r\n// change notes order property, because we remove current note to the end\r\nconst changeNotesOrder = (noteId: string, notes: Record<string, INote>): void => {\r\n  const notesKeys = Object.keys(notes);\r\n  let noteIndex = 0;\r\n  notesKeys.forEach((noteKey, index) => {\r\n    if (noteKey === noteId) {\r\n      noteIndex = index;\r\n      notes[noteKey].order = notesKeys.length - 1;\r\n    }\r\n    if (index > noteIndex) {\r\n      notes[noteKey].order = index - 1;\r\n    }\r\n  });\r\n};\r\n\r\nconst Workspace: React.FC<IProps> = ({\r\n  storageUpdateItemsProp,\r\n  storageSaveItem,\r\n  storageDeleteItem,\r\n}) => {\r\n  const [notes, setNotes] = useState<Record<string, INote>>({});\r\n\r\n  const createNote = useCallback(() => {\r\n    const notesKeys = Object.keys(notes);\r\n    const newNote = createNewNote(notesKeys.length);\r\n    setNotes({\r\n      ...notes,\r\n      [newNote.noteId]: newNote,\r\n    });\r\n\r\n    storageSaveItem && storageSaveItem(newNote.noteId, newNote);\r\n  }, [notes, storageSaveItem]);\r\n\r\n  const moveNoteToFront = useCallback(\r\n    (noteId: string) => {\r\n      const notesClone = { ...notes };\r\n\r\n      changeNotesOrder(noteId, notesClone);\r\n\r\n      const noteForMove = { ...notesClone[noteId] };\r\n      delete notesClone[noteId];\r\n\r\n      const newNotes = {\r\n        ...notesClone,\r\n        [noteId]: noteForMove,\r\n      };\r\n      setNotes(newNotes);\r\n\r\n      storageUpdateItemsProp && storageUpdateItemsProp(newNotes, 'order');\r\n    },\r\n    [notes, storageUpdateItemsProp],\r\n  );\r\n\r\n  const deleteNote = useCallback(\r\n    (noteId: string) => {\r\n      const notesClone = { ...notes };\r\n\r\n      changeNotesOrder(noteId, notesClone);\r\n\r\n      delete notesClone[noteId];\r\n      const newNotes = {\r\n        ...notesClone,\r\n      };\r\n      setNotes(newNotes);\r\n\r\n      storageDeleteItem && storageDeleteItem(noteId);\r\n    },\r\n    [notes, storageDeleteItem],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const notes: Record<string, INote> = Object.keys(localStorage).reduce(\r\n      (acc, key) => ({ ...acc, [key]: JSON.parse(localStorage[key]) }),\r\n      {},\r\n    );\r\n    const notesByOrder = Object.keys(notes)\r\n      .sort((a, b) => notes[a].order - notes[b].order)\r\n      .reduce((acc, key) => ({ ...acc, [key]: notes[key] }), {});\r\n\r\n    setNotes(notesByOrder);\r\n\r\n    return () => {\r\n      localStorage.clear();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"workspace\">\r\n      <header className=\"header\">Sticky Notes</header>\r\n      <AddButton onClick={createNote} />\r\n      <BaseController items={notes} moveNoteToFront={moveNoteToFront} deleteNote={deleteNote} />\r\n      <div className=\"trash\">\r\n        <Button className=\"delete-button\" icon={<DeleteIcon />} size={ButtonSize.L} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithLocalStorage(Workspace);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Workspace from './containers/workspace';\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <div className=\"app\">\r\n      <Workspace />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}